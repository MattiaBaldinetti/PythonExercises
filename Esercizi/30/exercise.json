{
    "id": 30,
    "description": "Dati 3 path a file di testo, decodificare il messaggio contenuto nel primo file tramite il secondo file e salvare il testo decodificato nel terzo file, ritorna il numero di caratteri che non è stato possibile decodificare",
    "text": "\n    Si implementi la funzione e30(fname1,fname2,fname3) prende in input l'indirizzo di tre file di testo.\n    Il primo file di testo contiene un messaggio codificato dove ogni carattere e' stato \n    sostituito da un intero di tre cifre.\n    Tutti i caratteri non numerici devono essere trasferiti come sono.\n    Nel secondo file  e' possibile ritrovare le corrispondenze numeri-caratteri tra i numeri \n    del testo e il rispettivo carattere. \n    Piu' precisamente questo secondo file e' organizzato in righe,  in ciascuna riga sono \n    presenti un carattere  e un intero  di tre cifre  che gli corrisponde nel file di testo separati da almeno uno spazio.\n    Numeri diversi possono far riferimento ad uno stesso carattere e non tutti i numeri che appaiono in fname1\n    sono necessariamente presenti nel file di decodifica.\n    La funzione es5 deve decodificare il messaggio presente nel primo file grazie \n    alle informazioni contenute nel secondo.\n    I numeri non presenti nel secondo file vanno decodificati con il simbolo '?'.\n    Il messaggio decodificato va poi salvato nel terzo file.\n    La funzione infine restituisce il numero di caratteri decodificati con il valore '?' presenti nel file decodificato.\n    Ad esempio se \n    - il file fname1 contiene il testo '991118991991345      103    091027003091103?'\n    - il file fname2 contiene il testo 'n   091\\n   t 991\\n a   103\\n a 127\\n n 003\\n  u 118 '\n    il testo decodificato da registrare in file3 sara': 'tutt? a n?nna?' e la funzione restituisce il numero 2.\n    Potete assumere che i caratteri numerici appaiano sempre raggruppati in triplette.\n    ",
    "algorithm": "inizializza un dizionario\nper ogni riga nel secondo file:\n\tcrea una voce nel dizionario del tipo codifica->carattere_decodificato\ninizializza una stringa\nleggi il file 1 e salva la stringa nella nuova variabile\ninizializza una variabile per il testo decodificato, un counter per i simboli '?' e un indice i, che parte da 0\nper ogni carattere del testo:\n\tse il carattere è un numero\n\t\tprendo la sottostringa a partire da i fino a i+3\n\t\tincremento i di 3\n\t\t\tprovo a decodificarla tramite il dizionario\n\t\t\taltrimenti inserisco un '?'\n\t\t\taggiorno il counter\n\taltrimenti:\n\t\tincremento l'indice di 1\n\t\taggiungo il carattere alla stringa decodificata\nscrivo la stringa decodificata nel terzo file\nritorno il contatore di '?'",
    "tags": ["File", "Stringhe"],
    "effort": 2,
    "clues": [],
    "from": "recupero-15-2-18"
}